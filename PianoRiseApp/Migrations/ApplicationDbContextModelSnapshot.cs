// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using PianoRiseManagement.Data;

#nullable disable

namespace PianoRiseApp.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("PianoRiseManagement.Models.AlumnoAula", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("AlumnoId")
                        .HasColumnType("integer");

                    b.Property<int>("AulaId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("InscritoEn")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("AlumnoId");

                    b.HasIndex("AulaId");

                    b.ToTable("AlumnoAulas");
                });

            modelBuilder.Entity("PianoRiseManagement.Models.Aula", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreadoEn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("DocenteId")
                        .HasColumnType("integer");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("DocenteId");

                    b.ToTable("Aulas");
                });

            modelBuilder.Entity("PianoRiseManagement.Models.AulaCancion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("AsignadoEn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("AulaId")
                        .HasColumnType("integer");

                    b.Property<int>("CancionId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("AulaId");

                    b.HasIndex("CancionId");

                    b.ToTable("AulaCanciones");
                });

            modelBuilder.Entity("PianoRiseManagement.Models.Cancion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Compositor")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("CreadoEn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("Nivel")
                        .HasColumnType("integer");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Canciones");
                });

            modelBuilder.Entity("PianoRiseManagement.Models.Historial", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("AlumnoId")
                        .HasColumnType("integer");

                    b.Property<int>("AulaId")
                        .HasColumnType("integer");

                    b.Property<int>("CancionId")
                        .HasColumnType("integer");

                    b.Property<TimeSpan>("Duracion")
                        .HasColumnType("interval");

                    b.Property<int>("Errores")
                        .HasColumnType("integer");

                    b.Property<decimal>("Precision")
                        .HasColumnType("numeric");

                    b.Property<DateTime>("RegistradoEn")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("AlumnoId");

                    b.HasIndex("AulaId");

                    b.HasIndex("CancionId");

                    b.ToTable("Historiales");
                });

            modelBuilder.Entity("PianoRiseManagement.Models.Rol", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("PianoRiseManagement.Models.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("Activo")
                        .HasColumnType("boolean");

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Contrasena")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Correo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("CreadoEn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("RolId")
                        .HasColumnType("integer");

                    b.Property<string>("UsuarioNombre")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("RolId");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("PianoRiseManagement.Models.AlumnoAula", b =>
                {
                    b.HasOne("PianoRiseManagement.Models.Usuario", "Alumno")
                        .WithMany("AlumnoAulas")
                        .HasForeignKey("AlumnoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PianoRiseManagement.Models.Aula", "Aula")
                        .WithMany("AlumnoAulas")
                        .HasForeignKey("AulaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Alumno");

                    b.Navigation("Aula");
                });

            modelBuilder.Entity("PianoRiseManagement.Models.Aula", b =>
                {
                    b.HasOne("PianoRiseManagement.Models.Usuario", "Docente")
                        .WithMany("Aulas")
                        .HasForeignKey("DocenteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Docente");
                });

            modelBuilder.Entity("PianoRiseManagement.Models.AulaCancion", b =>
                {
                    b.HasOne("PianoRiseManagement.Models.Aula", "Aula")
                        .WithMany("AulaCanciones")
                        .HasForeignKey("AulaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PianoRiseManagement.Models.Cancion", "Cancion")
                        .WithMany("AulaCanciones")
                        .HasForeignKey("CancionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Aula");

                    b.Navigation("Cancion");
                });

            modelBuilder.Entity("PianoRiseManagement.Models.Historial", b =>
                {
                    b.HasOne("PianoRiseManagement.Models.Usuario", "Alumno")
                        .WithMany("Historiales")
                        .HasForeignKey("AlumnoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PianoRiseManagement.Models.Aula", "Aula")
                        .WithMany("Historiales")
                        .HasForeignKey("AulaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PianoRiseManagement.Models.Cancion", "Cancion")
                        .WithMany("Historiales")
                        .HasForeignKey("CancionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Alumno");

                    b.Navigation("Aula");

                    b.Navigation("Cancion");
                });

            modelBuilder.Entity("PianoRiseManagement.Models.Usuario", b =>
                {
                    b.HasOne("PianoRiseManagement.Models.Rol", "Rol")
                        .WithMany("Usuarios")
                        .HasForeignKey("RolId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Rol");
                });

            modelBuilder.Entity("PianoRiseManagement.Models.Aula", b =>
                {
                    b.Navigation("AlumnoAulas");

                    b.Navigation("AulaCanciones");

                    b.Navigation("Historiales");
                });

            modelBuilder.Entity("PianoRiseManagement.Models.Cancion", b =>
                {
                    b.Navigation("AulaCanciones");

                    b.Navigation("Historiales");
                });

            modelBuilder.Entity("PianoRiseManagement.Models.Rol", b =>
                {
                    b.Navigation("Usuarios");
                });

            modelBuilder.Entity("PianoRiseManagement.Models.Usuario", b =>
                {
                    b.Navigation("AlumnoAulas");

                    b.Navigation("Aulas");

                    b.Navigation("Historiales");
                });
#pragma warning restore 612, 618
        }
    }
}
