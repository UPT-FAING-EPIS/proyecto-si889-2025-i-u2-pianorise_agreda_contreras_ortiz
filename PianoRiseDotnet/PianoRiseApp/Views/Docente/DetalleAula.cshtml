@model PianoRiseManagement.Models.ViewModels.AulaDetalleViewModel

@{
    ViewData["Title"] = "Detalle del Aula";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@section Styles {
    <link rel="stylesheet" href="~/css/Docente/DetalleAula.css" />
}

<div class="container py-4">
    <div class="card table-card">
        <div class="card-header card-header-custom d-flex justify-content-between align-items-center">
            <h4 class="title-icon">
                <i class="bi bi-easel2"></i> Aula: @Model.Aula.Grado° @Model.Aula.Seccion
            </h4>
            <span class="badge bg-success p-2">
                <i class="bi bi-key-fill"></i> Código de Aula: <strong>@Model.Aula.Codigo</strong>
            </span>
        </div>

        <div class="card-body bg-white">
            <div class="mb-3">
                <a asp-action="Index" class="btn btn-outline-secondary icon-btn">
                    <i class="bi bi-arrow-left"></i> Volver al panel de docente
                </a>
            </div>

            <!-- Tabs -->
            <ul class="nav nav-tabs mb-4" id="tabs-aula">
                <li class="nav-item">
                    <button type="button" class="nav-link active" onclick="mostrarSeccion('estudiantes', this)">Estudiantes</button>
                </li>
                <li class="nav-item">
                    <button type="button" class="nav-link" onclick="mostrarSeccion('repertorio', this)">Repertorio de canciones</button>
                </li>
                <li class="nav-item">
                    <button type="button" class="nav-link" onclick="mostrarSeccion('reportes', this)">Reportes</button>
                </li>
            </ul>

            <!-- Estudiantes -->
            <div id="seccion-estudiantes">
                @if (!Model.AlumnosInscritos.Any())
                {
                    <div class="alert alert-info text-center">
                        No hay estudiantes registrados en este aula.
                    </div>
                }
                else
                {
                    <div class="table-responsive">
                        <table class="table table-bordered align-middle text-center">
                            <thead class="table-success">
                                <tr>
                                    <th>Nombre completo</th>
                                    <th>Correo</th>
                                    <th>Inscrito en</th>
                                    <th>Acciones</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var registro in Model.AlumnosInscritos)
                                {
                                    <tr>
                                        <td>@registro.Alumno.NombreCompleto</td>
                                        <td>@registro.Alumno.CorreoElectronico</td>
                                        <td>@registro.InscritoEn.ToString("dd/MM/yyyy HH:mm")</td>
                                        <td>
                                            <form asp-controller="Docente" asp-action="ExpulsarAlumno" method="post" class="d-inline" onsubmit="return confirm('¿Estás seguro de expulsar al alumno?');">
                                                <input type="hidden" name="aulaId" value="@Model.Aula.Id" />
                                                <input type="hidden" name="alumnoId" value="@registro.Alumno.Id" />
                                                <button type="submit" class="btn btn-sm btn-danger">
                                                    <i class="bi bi-person-dash"></i> Expulsar
                                                </button>
                                            </form>
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                }
            </div>

            <!-- Repertorio -->
            <div id="seccion-repertorio" style="display: none;">
                <form asp-action="AgregarCancionAula" method="post" class="mb-3">
                    <input type="hidden" name="aulaId" value="@Model.Aula.Id" />
                    <div class="input-group">
                        <select name="cancionId" class="form-select" required>
                            <option value="">-- Seleccionar canción --</option>
                            @foreach (var cancion in Model.CancionesDisponibles)
                            {
                                <option value="@cancion.Id">@cancion.Titulo - @cancion.Compositor</option>
                            }
                        </select>
                        <button type="submit" class="btn btn-green">Asignar</button>
                    </div>
                </form>

                @if (!Model.CancionesAsignadas.Any())
                {
                    <div class="alert alert-info text-center">No hay canciones asignadas a este aula.</div>
                }
                else
                {
                    <ul class="list-group">
                        @foreach (var item in Model.CancionesAsignadas)
                        {
                            <li class="list-group-item d-flex justify-content-between align-items-center">
                                <div>
                                    🎵 <strong>@item.Cancion.Titulo</strong> - <em>@item.Cancion.Compositor</em>
                                    <small class="text-muted ms-2">(Asignado el @item.AsignadoEn.ToString("dd/MM/yyyy"))</small>
                                </div>
                                <form asp-action="EliminarCancionAula" method="post" class="m-0">
                                    <input type="hidden" name="aulaId" value="@Model.Aula.Id" />
                                    <input type="hidden" name="cancionId" value="@item.Cancion.Id" />
                                    <button type="submit" class="btn btn-sm btn-outline-danger">Quitar</button>
                                </form>
                            </li>
                        }
                    </ul>
                }
            </div>

            <!-- Reportes -->
            <div id="seccion-reportes" style="display: none;">
                @if (Model.ReportesPorCancion.Any())
                {
                    <div class="row">
                        <div class="col-md-1">
                            <div class="nav flex-column nav-pills" id="tabCanciones" role="tablist" aria-orientation="vertical">
                                @foreach (var item in Model.ReportesPorCancion)
                                {
                                    var id = item.Key.Replace(" ", "");
                                    <button class="nav-link @(item.Equals(Model.ReportesPorCancion.First()) ? "active" : "")"
                                            id="tab-@id"
                                            data-bs-toggle="pill"
                                            data-bs-target="#pane-@id"
                                            type="button" role="tab">@item.Key</button>
                                }
                            </div>
                        </div>
                        <div class="col-md-9">
                            <div class="tab-content" id="tabContent">
                                @foreach (var item in Model.ReportesPorCancion)
                                {
                                    var id = item.Key.Replace(" ", "");
                                    <div class="tab-pane fade @(item.Equals(Model.ReportesPorCancion.First()) ? "show active" : "")"
                                         id="pane-@id" role="tabpanel" aria-labelledby="tab-@id">
                                        <canvas id="chart-@id"></canvas>
                                    </div>
                                }
                            </div>
                        </div>
                    </div>

                    <hr class="my-4" />

                    @if (Model.ResumenesCanciones.Any())
                    {
                        <h5 class="text-success mb-3"><i class="bi bi-graph-up-arrow"></i> Resumen por canción</h5>
                        <div class="row g-4">
                            @foreach (var resumen in Model.ResumenesCanciones)
                            {
                                var ts = resumen.DuracionAcumulada;
                                var duracion = $"{ts.Hours:D2}:{ts.Minutes:D2}:{ts.Seconds:D2}";

                                <div class="col-md-6 col-lg-4">
                                    <div class="card shadow-sm border-success h-100">
                                        <div class="card-header bg-success text-white">
                                            <strong>@resumen.Titulo</strong>
                                        </div>
                                        <div class="card-body">
                                            <p><i class="bi bi-people-fill text-primary"></i> <strong>Alumnos:</strong> @resumen.TotalAlumnos</p>
                                            <p><i class="bi bi-x-circle-fill text-danger"></i> <strong>Errores:</strong> @resumen.TotalErrores</p>
                                            <p><i class="bi bi-clock-history text-warning"></i> <strong>Duración:</strong> @duracion</p>
                                        </div>
                                    </div>
                                </div>
                            }
                        </div>
                    }
                }
                else
                {
                    <div class="alert alert-warning">No hay canciones asignadas con datos de avance.</div>
                }
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script>
        const reportes = @Html.Raw(Json.Serialize(Model.ReportesPorCancion));

        const charts = {}; // 🔹 Diccionario global para almacenar los gráficos

        function renderizarGraficosPorCancion() {
            Object.entries(reportes).forEach(([titulo, alumnos]) => {
                const id = titulo.replaceAll(" ", "");
                const ctx = document.getElementById("chart-" + id);

                if (!ctx) return;

                // 🔥 Destruye el gráfico anterior si ya existe
                if (charts[id]) {
                    charts[id].destroy();
                }

                charts[id] = new Chart(ctx, {
                    type: 'bar',
                    data: {
                        labels: alumnos.map(a => a.nombreCompleto),
                        datasets: [{
                            label: 'Avance (%)',
                            data: alumnos.map(a => a.porcentajeAvance),
                            backgroundColor: 'rgba(40, 167, 69, 0.6)',
                            borderColor: 'rgba(40, 167, 69, 1)',
                            borderWidth: 1
                        }]
                    },
                    options: {
                        responsive: true,
                        maintainAspectRatio: false,
                        scales: {
                            y: {
                                beginAtZero: true,
                                max: 100
                            }
                        },
                        plugins: {
                            legend: {
                                display: true,
                                position: 'top'
                            }
                        }
                    }
                });
            });
        }

        let graficoPorCancionCargado = false;

        function mostrarSeccion(seccion, element) {
            ['estudiantes', 'repertorio', 'reportes'].forEach(id => {
                document.getElementById('seccion-' + id).style.display = 'none';
            });

            document.getElementById('seccion-' + seccion).style.display = 'block';

            document.querySelectorAll('#tabs-aula .nav-link').forEach(tab => tab.classList.remove('active'));
            element.classList.add('active');

            if (seccion === 'reportes' && !graficoPorCancionCargado) {
                renderizarGraficosPorCancion();
                graficoPorCancionCargado = true;
            }
        }

        document.addEventListener('DOMContentLoaded', () => {
            const defaultTab = document.querySelector('#tabs-aula .nav-link.active');
            if (defaultTab) defaultTab.click();
        });
    </script>
}
