@model PianoRiseManagement.Models.Cancion

@{
    ViewData["Title"] = "Registrar nueva canción";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@section Styles {
    <link rel="stylesheet" href="~/css/Canciones/Create.css" />
}

<div class="container py-4">
    <div class="card shadow-sm">
        <div class="card-header card-header-custom">
            <h4 class="title-icon mb-0">
                <i class="bi bi-music-note-plus"></i> @ViewData["Title"]
            </h4>
        </div>
        <div class="card-body bg-white">

            <form asp-action="Create" method="post">
                <div class="mb-3">
                    <label asp-for="Titulo" class="form-label">Título</label>
                    <input asp-for="Titulo" class="form-control" />
                    <span asp-validation-for="Titulo" class="text-danger"></span>
                </div>

                <div class="mb-3">
                    <label asp-for="Nivel" class="form-label">Nivel</label>
                    <select asp-for="Nivel" class="form-select">
                        <option value="1">Fácil</option>
                        <option value="2">Intermedio</option>
                        <option value="3">Difícil</option>
                    </select>
                    <span asp-validation-for="Nivel" class="text-danger"></span>
                </div>

                <div class="mb-3">
                    <label asp-for="Compositor" class="form-label">Compositor</label>
                    <input asp-for="Compositor" class="form-control" />
                    <span asp-validation-for="Compositor" class="text-danger"></span>
                </div>

                <div class="mb-3">
                    <label class="form-label">Notas (Ej: C, D, E)</label>
                    <div class="d-flex gap-2 mb-2">
                        <input type="text" id="notaInput" class="form-control" placeholder="Agregar nota (Ej: C, D, G)" />
                        <button type="button" id="addNotaBtn" class="btn btn-green">+</button>
                    </div>
                    <div id="notasContainer" class="mb-2"></div>
                    <input type="hidden" asp-for="NotasJson" id="Notas" name="NotasJson" />
                </div>

                <div class="mb-3">
                    <label asp-for="Estado" class="form-label">Estado</label>
                    <select asp-for="Estado" class="form-select">
                        <option value="true">Activa</option>
                        <option value="false">Inactiva</option>
                    </select>
                </div>

                <div class="d-flex gap-2">
                    <button type="submit" class="btn btn-success">
                        <i class="bi bi-save"></i> Guardar
                    </button>
                    <a asp-action="Index" class="btn btn-secondary">
                        <i class="bi bi-x-circle"></i> Cancelar
                    </a>
                </div>
            </form>
        </div>
    </div>
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    <script>
        const NOTAS_VALIDAS = "ABCDEFGHIJKLMNOPQRSTUVWXYZ".split('');
        let notas = [];

        function renderChips() {
            const container = document.getElementById('notasContainer');
            const hidden = document.getElementById('Notas');
            container.innerHTML = '';

            notas.forEach((nota, index) => {
                const chip = document.createElement('span');
                chip.className = 'chip';
                chip.innerHTML = `${nota} <button type="button" onclick="removeNota(${index})">×</button>`;
                container.appendChild(chip);
            });

            hidden.value = JSON.stringify(notas);
        }

        function removeNota(index) {
            notas.splice(index, 1);
            renderChips();
        }

        function agregarNotasDesdeInput() {
            const input = document.getElementById('notaInput');
            const entrada = input.value.trim().toUpperCase();
            if (!entrada) return;

            const posiblesNotas = entrada.split(',').map(n => n.trim());
            let algunaAgregada = false;

            posiblesNotas.forEach(nota => {
                if (NOTAS_VALIDAS.includes(nota)) {
                    notas.push(nota);
                    algunaAgregada = true;
                } else {
                    alert(`"${nota}" no es una nota válida.`);
                }
            });

            if (algunaAgregada) renderChips();
            input.value = '';
        }

        document.getElementById('addNotaBtn').addEventListener('click', agregarNotasDesdeInput);
        document.getElementById('notaInput').addEventListener('keydown', e => {
            if (e.key === 'Enter') {
                e.preventDefault();
                agregarNotasDesdeInput();
            }
        });

        document.querySelector('form').addEventListener('submit', e => {
            if (notas.length === 0) {
                e.preventDefault();
                alert('Debes agregar al menos una nota antes de guardar la canción.');
            }
        });
    </script>
}
